{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MAURICIO\\\\Documents\\\\ESTUDIO\\\\CTD\\\\Ciclo 3\\\\Front End 3\\\\Nueva carpeta (4)\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer, useMemo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  user: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.payload\n      };\n\n    case \"TOGGLE_THEME\":\n      return { ...state,\n        theme: state.theme === \"light\" ? \"dark\" : \"light\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ContextGlobal = /*#__PURE__*/createContext();\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const url = \"https://jsonplaceholder.typicode.com/users/\";\n  useEffect(() => {\n    fetch(url).then(response => response.json()).then(data => dispatch({\n      type: \"SET_USER\",\n      payload: data\n    }));\n  }, []);\n  const data = useMemo(() => {\n    return {\n      user: state.user,\n      setUser: data => dispatch({\n        type: \"SET_USER\",\n        payload: data\n      }),\n      theme: state.theme,\n      toggleTheme: () => dispatch({\n        type: \"TOGGLE_THEME\"\n      })\n    };\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: data,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"N4uWPPU6/HiF+eTd9FqC4JZW6pw=\");\n\n_c = ContextProvider;\nexport const useUserStates = () => {\n  _s2();\n\n  return useContext(ContextGlobal);\n};\n\n_s2(useUserStates, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useReducer","useMemo","initialState","theme","user","reducer","state","action","type","payload","ContextGlobal","ContextProvider","children","dispatch","url","fetch","then","response","json","data","setUser","toggleTheme","useUserStates"],"sources":["C:/Users/MAURICIO/Documents/ESTUDIO/CTD/Ciclo 3/Front End 3/Nueva carpeta (4)/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useReducer, useMemo } from \"react\";\r\n\r\nexport const initialState = { theme: \"light\", user: [] };\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return { ...state, user: action.payload };\r\n    case \"TOGGLE_THEME\":\r\n      return { ...state, theme: state.theme === \"light\" ? \"dark\" : \"light\" };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  \r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const url = \"https://jsonplaceholder.typicode.com/users/\";\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => dispatch({ type: \"SET_USER\", payload: data }));\r\n  }, []);\r\n\r\n  const data = useMemo(() => {\r\n    return {\r\n      user: state.user,\r\n      setUser: (data) => dispatch({ type: \"SET_USER\", payload: data }),\r\n      theme: state.theme,\r\n      toggleTheme: () => dispatch({ type: \"TOGGLE_THEME\" }),\r\n    };\r\n  }, [state]);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={data}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n\r\nexport const useUserStates = () => useContext(ContextGlobal);"],"mappings":";;;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,UAA/C,EAA2DC,OAA3D,QAA0E,OAA1E;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,IAAI,EAAE;AAAxB,CAArB;;AAEP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,UAAL;MACE,OAAO,EAAE,GAAGF,KAAL;QAAYF,IAAI,EAAEG,MAAM,CAACE;MAAzB,CAAP;;IACF,KAAK,cAAL;MACE,OAAO,EAAE,GAAGH,KAAL;QAAYH,KAAK,EAAEG,KAAK,CAACH,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC;MAAtD,CAAP;;IACF;MACE,OAAOG,KAAP;EANJ;AAQD,CATD;;AAWA,OAAO,MAAMI,aAAa,gBAAGb,aAAa,EAAnC;AAEP,OAAO,MAAMc,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EAEA,MAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBb,UAAU,CAACK,OAAD,EAAUH,YAAV,CAApC;EACA,MAAMY,GAAG,GAAG,6CAAZ;EAEAf,SAAS,CAAC,MAAM;IACdgB,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUN,QAAQ,CAAC;MAAEL,IAAI,EAAE,UAAR;MAAoBC,OAAO,EAAEU;IAA7B,CAAD,CAF1B;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA,MAAMA,IAAI,GAAGlB,OAAO,CAAC,MAAM;IACzB,OAAO;MACLG,IAAI,EAAEE,KAAK,CAACF,IADP;MAELgB,OAAO,EAAGD,IAAD,IAAUN,QAAQ,CAAC;QAAEL,IAAI,EAAE,UAAR;QAAoBC,OAAO,EAAEU;MAA7B,CAAD,CAFtB;MAGLhB,KAAK,EAAEG,KAAK,CAACH,KAHR;MAILkB,WAAW,EAAE,MAAMR,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAR,CAAD;IAJtB,CAAP;EAMD,CAPmB,EAOjB,CAACF,KAAD,CAPiB,CAApB;EASA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEa,IAA/B;IAAA,UACGP;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA1BM;;GAAMD,e;;KAAAA,e;AA4Bb,OAAO,MAAMW,aAAa,GAAG;EAAA;;EAAA,OAAMxB,UAAU,CAACY,aAAD,CAAhB;AAAA,CAAtB;;IAAMY,a"},"metadata":{},"sourceType":"module"}